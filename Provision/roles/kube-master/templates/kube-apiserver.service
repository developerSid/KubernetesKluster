[Unit]
Description=Kubernetes API Server
Documentation=https://github.com/kubernetes/kubernetes

[Service]
User=kubernetes
Group=kubernetes
ExecStart=/opt/kubernetes/kubernetes-{{ kubernetesVer }}-linux-amd64/bin/kube-apiserver \
  --advertise-address={{ ansible_host }} \
  --allow-privileged=true \
  --apiserver-count=3 \
  --audit-log-maxage=30 \
  --audit-log-maxbackup=3 \
  --audit-log-maxsize=100 \
  --audit-log-path=/opt/kubernetes/log \
  --authorization-mode=Node,RBAC \
  --apiserver-count=3 \
  --bind-address=0.0.0.0 \
  --client-ca-file=/opt/kubernetes/ssl/ca.pem \
  --enable-admission-plugins=Initializers,NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota \
  --enable-swagger-ui=true \
  --etcd-cafile=/opt/etcd/ssl/ca.pem \ {# TODO need to alter this so that the apiserver can be run on a separate host #}
  --etcd-certfile=/opt/etcd/ssl/{{ inventory_hostname }}.{{ clusterDomain }}.pem \ {# TODO need to alter this so that the apiserver can be run on a separate host from etcd #}
  --etcd-keyfile=/opt/etcd/ssl/{{ inventory_hostname }}.{{ clusterDomain }}-key.pem \ {# TODO need to alter this so that the apiserver can be run on a separate host from etcd #}
  --etcd-servers={% for host in groups['etcd'] %}http://{{ hostvars[host]['ansible_host'] }}:2379{% if not loop.last %},{% endif %}{% endfor %} \
  --event-ttl=1h \
  --experimental-encryption-provider-config=/var/lib/kubernetes/encryption-config.yaml \
  --kubelet-certificate-authority=/opt/kubernetes/ssl/ca.pem \
  --kubelet-client-certificate=/opt/kubernetes/ssl/{{ inventory_hostname }}.{{ clusterDomain }}.pem \
  --kubelet-client-key=/opt/kubernetes/ssl/{{ inventory_hostname }}.{{ clusterDomain }}.pem-key.pem \
  --kubelet-https=true \
  --runtime-config=api/all \
  --service-account-key-file=/opt/kubernetes/ssl/service-account.pem \
  --secure-port=0 \
  --service-cluster-ip-range={{ cidr }} \
  --service-node-port-range=30000-32767 \
  --tls-cert-file=/opt/kubernetes/ssl/{{ inventory_hostname }}.{{ clusterDomain }}.pem \
  --tls-private-key-file=/opt/kubernetes/ssl/{{ inventory_hostname }}.{{ clusterDomain }}.pem-key.pem \
  --v=2
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target